<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="500" height="400"
			   title="Novas Alterações" xmlns:locacao="br.com.andebem.view.locacao.*"
			   skinClass="br.com.andebem.assets.skins.PopUpSkin"
			   close="closePopUp()"
			   contentCreationComplete="contentCreationCompleteHandler(event)" xmlns:autocomplete="br.com.andebem.components.controls.autocomplete.*">
	<fx:Script>
		<![CDATA[
			import br.com.andebem.components.controls.autocomplete.AutoCompleteSkin;
			import br.com.andebem.components.controls.autocomplete.event.AutoCompleteEvent;
			import br.com.andebem.domain.Alteracao;
			import br.com.andebem.domain.Automovel;
			import br.com.andebem.domain.Cliente;
			import br.com.andebem.presentation.LocacaoPresentationModel;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			[Inject]
			[Bindable]
			public var pm:LocacaoPresentationModel;
			
			[Bindable]
			public var exibirCliente:Boolean = true;
			
			private var _automovel:Automovel;

			[Bindable]
			public function set automovel(value:Automovel):void
			{
				_automovel = value;
				listarAlteracoes();
			}
			
			public function get automovel():Automovel
			{
				return _automovel;
			}
			
			[Bindable]
			public var currentClient:Cliente;

			protected function closePopUp():void
			{
				PopUpManager.removePopUp(this);
			}

			protected function contentCreationCompleteHandler(event:FlexEvent):void
			{
				if(pm.clienteModel.listClientes.length < 1)
				{
					pm.listarClientes();
				}
			}
			
			public function listarAlteracoes():void
			{
				pm.listarAlteracoes(automovel);
			}


			protected function checarAlteracoesLocacao():void
			{
				
				var collection:ArrayCollection = alteracoes.provider;
				var temAlteracaoInativa:Boolean = false;
				
				if(collection!=null)
					for each (var alteracao:Alteracao in collection)
				{
					alteracao.automovel = automovel;
					
					if(alteracao.ativa)
					{
						temAlteracaoInativa = true;
					}
				}
				
				if(!temAlteracaoInativa)
				{
					enviarAlteracoesAutomovel(collection);
				}else{
					Alert.show("Existem Alterações que vão indisponibilzar o automovel deseja continuar ?", 
								"Indisponibilizar", Alert.YES | Alert.NO, null, closeAlertHandler);
				}
				
			}
			
			public function closeAlertHandler(event:CloseEvent):void
			{
				if(event.detail == Alert.YES)
				{
					pm.colocarAutomovelComoManutencao(automovel);
					closePopUp();
				}
			}
			
			protected function enviarAlteracoesAutomovel(alteracoes:ArrayCollection):void
			{
				pm.salvarAlteracoes(alteracoes, automovel);
				
				closePopUp();
			}

			protected function ddlCliente_selectHandler(event:AutoCompleteEvent):void
			{
				currentClient = ddlCliente.selectedItem as Cliente;
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"/>
	</s:layout>
	
	<s:HGroup width="100%" verticalAlign="middle" paddingTop="0" visible="{exibirCliente}" includeInLayout="{exibirCliente}">
		<s:Label text="Selecione um Cliente: " fontWeight="bold" color="#666666"/>
		<autocomplete:AutoComplete id="ddlCliente" dataProvider="{pm.clienteModel.listClientes}" labelField="nome" forceOpen="true" 
								   select="ddlCliente_selectHandler(event)" minChars="1"
								   skinClass="br.com.andebem.components.controls.autocomplete.AutoCompleteSkin"/>
		<!--<s:DropDownList id="ddlCliente" prompt="Selecione..." width="100%" 
						dataProvider="{pm.clienteModel.listClientes}" change="ddlCliente_changeHandler(event)" />-->
	</s:HGroup>

	<s:HGroup width="100%" paddingBottom="5" paddingTop="10">
		<s:Label text="Automovel" width="100%" fontWeight="bold" color="#666666" fontSize="14" />
		<s:Label text="Cliente" width="100%" fontWeight="bold" color="#666666" fontSize="14" />
	</s:HGroup>
	<mx:HRule width="100%" />
	<s:HGroup width="100%">
		<mx:Form width="100%" paddingTop="5" paddingBottom="5">
			<mx:FormItem label="Modelo:" labelStyleName="textLeft">
				<s:Label text="{automovel.modelo.label}"/>
			</mx:FormItem>
			<mx:FormItem label="Placa:" labelStyleName="textLeft">
				<s:Label text="{automovel.placa}"/>
			</mx:FormItem>
			<mx:FormItem label="Ano:" labelStyleName="textLeft">
				<s:Label text="{automovel.ano}"/>
			</mx:FormItem>
		</mx:Form>
		
		<mx:Form width="100%" paddingTop="5" paddingBottom="5">
			<mx:FormItem label="Nome:" labelStyleName="textLeft">
				<s:Label text="{currentClient.nome}"/>
			</mx:FormItem>
			<mx:FormItem label="Tipo:" labelStyleName="textLeft">
				<s:Label text="{currentClient.tipoPessoa.nome}"/>
			</mx:FormItem>
			<mx:FormItem label="Documento:" labelStyleName="textLeft">
				<s:Label text="{currentClient.cpfCnpj}"/>
			</mx:FormItem>
		</mx:Form>
	</s:HGroup>
	
	<s:Label text="Alterações" width="100%" fontWeight="bold" color="#666666" fontSize="14" />
	
	<mx:HRule width="100%" />
	
	<locacao:PainelAlteracoes id="alteracoes" width="100%" height="100%" provider="{pm.autoModel.listaAlteracoes}"/>
	<s:controlBarContent>
		<s:Button label="Enviar" height="30" width="100" click="checarAlteracoesLocacao()" enabled="{(exibirCliente ? ddlCliente.selectedIndex &gt; -1:true)}"/>
		<s:Button label="Cancelar" click="closePopUp();" height="30" width="100"/>
	</s:controlBarContent>
	<s:controlBarLayout>
		<s:HorizontalLayout horizontalAlign="center" paddingBottom="10"/>
	</s:controlBarLayout>
	
</s:TitleWindow>
