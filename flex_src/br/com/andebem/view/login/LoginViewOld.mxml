<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:mx="library://ns.adobe.com/flex/mx" height="180" width="280"
	xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
	title="Ande Bem Rent-a-Car" implements="mx.core.INavigatorContent">

	<s:layout>
		<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"/>
	</s:layout>
	<fx:Metadata>
		[Event(name="loginSucess",type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import br.com.andebem.presentation.LoginPresentationModel;

			import mx.controls.Alert;
			import mx.core.INavigatorContent;
			import mx.messaging.ChannelSet;
			import mx.messaging.messages.ErrorMessage;
			import mx.rpc.AsyncResponder;
			import mx.rpc.AsyncToken;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;

			[Inject]
			public var channelSet:ChannelSet;

			[Inject(source="usuarioService")]
			public var ro:RemoteObject;

			protected function ro_resultHandler(event:ResultEvent):void
			{
				Alert.show("Login Efetuado", "Sucesso!");
			}

			protected function ro_faultHandler(event:FaultEvent):void
			{
				var errorMessage:ErrorMessage = event.message as ErrorMessage
				Alert.show(errorMessage.rootCause.message, "Error");
			}

			protected function btnSend_clickHandler(event:MouseEvent):void
			{
				//ro.verificarLogin(login.text, senha.text);
				ro.verificarLogin(login.text, senha.text);
			}

			private function logar():void
			{
				/*  if(!channelSet.authenticated)
				   {
				   var token:AsyncToken = channelSet.login(login.text, senha.text);
				   token.addResponder(new AsyncResponder(loginResult, loginFault));
				 }  */

				 model.login(login.text, senha.text); 
			}

			private function loginResult(event:ResultEvent, token:AsyncToken):void
			{
				//get data srv.getMyEntities();
				//change state currentState = “userAuthenticated”;
				//ro.helloTeste("ajuste");
				//Alert.show("asdas");
				/* ro.verificarLogin(login.text, senha.text); */
				dispatchEvent(new Event("loginSucess"));

			}

			private function loginFault(event:FaultEvent, token:AsyncToken):void
			{
				Alert.show("Login ou senha inválidos, tente novamente!");
			}

			private var _icon:Class;
			private var _label:String

			public function get icon():Class
			{
				return _icon;
			}

			public function set icon(value:Class):void
			{
				_icon = value;
			}

			public function get label():String
			{
				return _label;
			}

			public function set label(value:String):void
			{
				_label = value;
			}

			[Inject]
			[Bindable]
			public var model:LoginPresentationModel;
		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<mx:Form>
		<mx:FormItem label="Login:"
			required="true">
			<s:TextInput id="login" errorString="{model.usernameError}"/>
		</mx:FormItem>
		<mx:FormItem label="Senha:"
			required="true">
			<s:TextInput id="senha" displayAsPassword="true" errorString="{model.passwordError}"/>
		</mx:FormItem>
	</mx:Form>
	<s:controlBarContent>
		<mx:Spacer width="100%"/>
		<s:Button label="Enviar"
			click="logar();" enabled="{!model.loginInProgress}"/>
	</s:controlBarContent>
</s:Panel>
